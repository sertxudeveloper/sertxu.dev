name: Deploy to Kubernetes cluster

concurrency: 
  group: production
  
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  K8S_CONTAINER: sertxudev
  K8S_DEPLOYMENT: sertxudev
  K8S_NAMESPACE: sertxudev

jobs:

  build:
    name: Build and Deploy Docker image
    runs-on: ubuntu-latest
    environment: production
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ github.repository }}:buildcache
          cache-to: type=registry,ref=${{ github.repository }}:buildcache,mode=max

      - name: Deploy new image
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.KUBERNETES_MASTER_SSH_HOST }}
          username: ${{ secrets.KUBERNETES_MASTER_SSH_USER }}
          port: ${{ secrets.KUBERNETES_MASTER_SSH_PORT }}
          key: ${{ secrets.KUBERNETES_MASTER_SSH_KEY }}
          script: |
            microk8s kubectl set image deployment/${{ env.K8S_DEPLOYMENT }}-php-nginx -n ${{ env.K8S_NAMESPACE }} ${{ env.K8S_CONTAINER }}-php-nginx="${{ github.repository }}:sha-${{ github.sha }}"
            microk8s kubectl set image deployment/${{ env.K8S_DEPLOYMENT }}-worker -n ${{ env.K8S_NAMESPACE }} ${{ env.K8S_CONTAINER }}-worker="${{ github.repository }}:sha-${{ github.sha }}"
            microk8s kubectl set image deployment/${{ env.K8S_DEPLOYMENT }}-scheduler -n ${{ env.K8S_NAMESPACE }} ${{ env.K8S_CONTAINER }}-scheduler="${{ github.repository }}:sha-${{ github.sha }}"
